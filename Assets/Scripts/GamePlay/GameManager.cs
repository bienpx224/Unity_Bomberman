using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;
using Photon.Pun;

public class GameManager : Singleton<GameManager>
{
    [SerializeField] private GameObject[] playerPositionStart;
    private List<int> playerPositionUsed = new List<int>();
    [SerializeField] private bool isAutoGeneratedTwoPlayers;
    [SerializeField] private List<GameObject> _prefabsPlayer;
    public List<PlayerController> players;


    

    void Start(){
        players = new List<PlayerController>(); 
        if(isAutoGeneratedTwoPlayers){
            // SetupNewPlayer();
            // SetupNewPlayer2();
        }else{
            SetupNewPlayer();
        }
    }

    public void SetupNewPlayer(){
        GameObject p = PhotonNetwork.Instantiate(Constants.PREFABS_PATH + GetPrefabForPlayer().name, GetPositionSpawnable().transform.position,Quaternion.identity);
        players.Add(p.GetComponent<PlayerController>());
    }
    public void SetupNewPlayer2(){
        GameObject p = Instantiate(_prefabsPlayer[0], GetPositionSpawnable().transform.position,Quaternion.identity);
        players.Add(p.GetComponent<PlayerController>());
    }
    private GameObject GetPositionSpawnable(){
        if(players.Count >= playerPositionStart.Length){  /* Nếu số lượng Player vượt quá số điểm spawn thì cho mặc định hiện vị trí 0 */
            return playerPositionStart[0];
        }
        int index = Random.Range(0, playerPositionStart.Length); /*  Random 1 điểm để spawn player.  */
        Debug.Log(index);
        Debug.Log(playerPositionUsed.Count);
        if(playerPositionUsed.Contains(index)){
            while(playerPositionUsed.Contains(index)){
                index = Random.Range(0, playerPositionStart.Length);
            }
        }
        playerPositionUsed.Add(index);
        return playerPositionStart[index];
    }
    private GameObject GetPrefabForPlayer(){
        return _prefabsPlayer[0];
        if(players.Count > _prefabsPlayer.Count){
            return _prefabsPlayer[0];
        }
        
        return _prefabsPlayer[players.Count];
        
    }

    public void CheckWinState(){
        int aliveCount = 0;
        foreach (PlayerController player in players) {
            if(player.gameObject.activeSelf){
                aliveCount++;
            }
        }
        if(aliveCount <= 1){
            Invoke(nameof(NewRound), 3f);
        }
    }
    public void NewRound(){
        Reset();
            // SceneManager.LoadScene("Bomberman");
            SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);
    }
    void Reset(){

    }
    public void BackToLobby(){
        SceneManager.LoadScene("Lobby");
    }

}
